---
title: "B√†i 11"
subtitle: "Data visualization v·ªõi ggplot2"
author: "Ong Ph√∫c Th·ªãnh, Kh∆∞∆°ng Qu·ª≥nh Long"
format: revealjs
echo: true 
---

## ggplot2

-   ggplot2 l√† package ƒë·ªì h·ªça c·ªßa R
-   Vi·∫øt b·ªüi Hadley Wickham (b·∫Øt ƒë·∫ßu nƒÉm 2005)
-   D·ª±a v√†o nguy√™n l√Ω "Grammar of Graphics" c·ªßa Leland Wilkinson
-   N·∫±m trong h·ªá th·ªëng "Tidyverse" (c√≥ th·ªÉ c√†i ƒë·∫∑t tr·ª±c ti·∫øp t·ª´ **install.packages("ggplot2")**, ho·∫∑c **install.packages("tidyverse"))**
-   Website: [https://ggplot2.tidyverse.org](https://ggplot2.tidyverse.org){preview-link="true" style="text-align: center"}

## Grammar of ggplot2

-   C·∫•u tr√∫c ggplot2 bao g·ªìm t·∫•t c·∫£ c√°c th√†nh ph·∫ßn c·ªßa bi·ªÉu ƒë·ªì (t∆∞∆°ng t·ª± "subject", "verb", "noun", "adj"... Cho ƒë·ªì h·ªça).
-   Ho·∫°t ƒë·ªông theo l·ªõp (layers) (t∆∞∆°ng t·ª± c∆° ch·∫ø c·ªßa photoshop) =\> linh ho·∫°t, c√≥ th·ªÉ k·∫øt h·ª£p nhi·ªÅu lo·∫°i bi·ªÉu ƒë·ªì (tr√™n c√πng m·ªôt hay nhi·ªÅu b·ªô data) c√πng l√∫c

## 

![](images4/image4.png){fig-align="center"}

## Grammar of ggplot2

-   "In brief, the grammar tells us that a statistical graphic is a mapping from data to aesthetic attributes (colour, shape, size) of geometric objects (points, lines, bars). The plot may also contain statistical transformations of the data and is drawn on a specific coordinate system"

    ```         
                            -- Ggplot2 - Elegant Graphics for Data Analysis -- 
    ```

## L∆∞u √Ω

Tr∆∞·ªõc khi th·ª±c h√†nh vi·∫øt R cho b√†i n√†y, m√¨nh c·∫ßn khai b√°o d·ªØ li·ªáu `midwest` b·∫±ng 2 d√≤ng l·ªánh sau:

```{r}
library(ggplot2)
data(midwest)
```

## 

```{r}
ggplot(midwest, aes(x = area, y = poptotal)) + 
  geom_point(aes(col = state, size = popdensity), alpha = 0.7) + 
  geom_smooth(method = "loess", size = 1.2, fill = "yellow", col = "red") + 
  xlim(c(0, 0.1)) + 
  ylim(c(0, 500000)) + 
  labs(title = "Area Vs Population", y = "Population", x = "Area", 
         caption = "Source: midwest")+
  theme_bw(15)
```

## 

```{r}
gg <- ggplot(data = midwest, aes(x = area, y = poptotal)) + 
	geom_point(aes(col=state, size=popdensity))
gg
```

## 

```{r}
gg + geom_smooth(method="loess", se=F)
```

## 

```{r}
gg + 
    geom_smooth(method="loess", se=F) + 
    theme_bw()
```

## Components

-   Data: bao g·ªìm dataset v√† aesthetic mappings (bao g·ªìm c√°c tr·ª•c x, y, color, shape, size...).
-   Geometric objects: lo·∫°i bi·ªÉu ƒë·ªì mu·ªën v·∫Ω (point, bar, lines...)
-   Statistical transformations, stats (h√†m th·ªëng k√™)
-   Scale
-   Coordinate system
-   Faceting
-   Annotation

## V√≠ d·ª• v·ªõi scatter plot

## M·ª•c ti√™u v√≠ d·ª•

1.  Hi·ªÉu c√¢u l·ªánh l√†m vi·ªác v·ªõi ggplot2
2.  T·∫°o bi·ªÉu ƒë·ªì scatter plot ƒë∆°n gi·∫£n
3.  Thay ƒë·ªïi gi·ªõi h·∫°n tr·ª•c x, y
4.  Thay ƒë·ªïi title v√† axis labels

## Data -- "midwest"

-   Data kh·∫£o s√°t d√¢n s·ªë mi·ªÅn trung t√¢y n∆∞·ªõc M·ªπ
-   Bao g·ªìm 28 vars v√† 437 obs

```         
#library
library(tidyverse)
#----------------------------------
# load data
data(midwest)
options(scipen=999)
```

## Data -- "midwest"

```{r}
library(tidyverse)
glimpse(midwest)
```

## 1. Data & aesthetic mappings

-   ggplot2 ch·ªâ nh·∫≠n c·∫•u tr√∫c d·ªØ li·ªáu "data frame", kh√¥ng nh·∫≠n vector hay matrix
-   Trong th·ª±c h√†nh, c√≥ th·ªÉ c·∫ßn nhi·ªÅu b∆∞·ªõc chu·∫©n b·ªã ƒë·ªÉ t·ª´ data g·ªëc =\> data input cho ggplot2. M·ªôt s·ªë package h·ªØu √≠ch trong bi√™n t·∫≠p s·ªë li·ªáu nh∆∞ "dplyr", "tidyverse", to√°n t·ª≠ pipe %\>%
-   aesthetic mappings bao g·ªìm tr·ª•c x, y, z mu·ªën v·∫Ω (t√πy lo·∫°i bi·ªÉu ƒë·ªì 1D, 2D, 3D...) shape, size, color
-   Data v√† aesthetic mappings c√≥ th·ªÉ khai b√°o chung cho t·∫•t c·∫£ c√°c layer ho·∫∑c t·ª´ng layer

## 1. Data & aesthetic mappings

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal))
```

-   Bi·ªÉu ƒë·ªì tr·ªëng v√¨ ch·ªâ m·ªõi khai b√°o Data (midwest) v√† aesthetic mappings (tr·ª•c x l√† area, tr·ª•c y l√† total population) =\> ch∆∞a bi·∫øt v·∫Ω lo·∫°i bi·ªÉu ƒë·ªì g√¨
-   C·∫ßn th√™m th√†nh ph·∫ßn "Geometric"

## 2. Geometric objects

-   Lo·∫°i bi·ªÉu ƒë·ªì mu·ªën v·∫Ω
-   S·ª≠ d·ª•ng th√¥ng tin trong aesthetic mappings (v√≠ d·ª• scatter ph·∫£i c·∫ßn 2 tr·ª•c (x,y), bar ch·ªâ c·∫ßn tr·ª•c x ...)
-   C√¢u l·ªánh:
    -   geom_point: ƒëi·ªÉm
    -   geom_line: ƒë∆∞·ªùng
    -   geom_histogram: histogram
    -   .... : tham kh·∫£o [cheat sheet](https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf){preview-link="false" style="text-align: center" target="_blank"}
-   [Data]{style="color: red;"} + [aesthetic]{style="color: red;"} + [geometric object]{style="color: red;"} l√† 3 th√†nh ph·∫ßn t·ªëi thi·ªÉu c·ªßa m·ªôt bi·ªÉu ƒë·ªì

## 

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) +
    geom_point()
```

Th√™m geom_point() ƒë·ªÉ v·∫Ω d·∫°ng bi·ªÉu ƒë·ªì ƒëi·ªÉm

geom_point s·ª≠ d·ª•ng th√¥ng tin tr·ª•c x, y t·ª´ aes()

## 

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) +
    geom_line()
```

Ho·∫∑c geom_line() ƒë·ªÉ v·∫Ω d·∫°ng bi·ªÉu ƒë·ªì ƒë∆∞·ªùng

## 

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point() +
    geom_smooth(method = "lm")
```

T·ª´ bi·ªÉu ƒë·ªì ƒëi·ªÉm, th√™m 1 layer smooth (linear model)

## Ch√∫ √Ω

-   Data v√† aes() ƒë∆∞·ª£c khai b√°o ·ªü "**ggplot()**" =\> to√†n b·ªô c√°c layer sau (geom_point(), geom_smooth()) ƒë·ªÅu s·ª≠ d·ª•ng th√¥ng tin khai b√°o n√†y
-   N·∫øu data v√† aes() ƒë∆∞·ª£c khai b√°o ri√™ng l·∫ª ·ªü t·ª´ng layer =\>th√¥ng tin n√†y ch·ªâ ƒë∆∞·ª£c √°p d·ª•ng cho ri√™ng t·ª´ng layer ƒë√≥ (tr∆∞·ªùng h·ª£p n√†y ƒë∆∞·ª£c s·ª≠ d·ª•ng khi mu·ªën v·∫Ω nhi·ªÅu layer t·ª´ nhi·ªÅu data kh√°c nhau)
-   V√≠ d·ª•

## 

```{r}
# Data v√† aes() ƒë∆∞·ª£c d√πng chung cho c√°c layers
ggplot(data = midwest, aes(x = area, y = poptotal)) +
    geom_point() +
    geom_smooth(method = "lm")
```

## 

```{r}
# Data v√† aes() ch·ªâ √°p d·ª•ng cho layer geom_point()
ggplot() +
    geom_point(data = midwest, aes(x = area, y = poptotal)) +
    geom_smooth(method = "lm")

```

```         
layer geom_smooth() ch∆∞a c√≥ data & aes()
```

## 3. Thay ƒë·ªïi gi·ªõi h·∫°n tr·ª•c x, y

-   C√≥ 2 c√°ch gi·ªõi h·∫°n tr·ª•c x v√† y

-   C√°ch 1:

    -   Gi·ªõi h·∫°n tr·ª•c x v√† y ƒë·ªìng th·ªùi lo·∫°i b·ªè c√°c gi√° tr·ªã n·∫±m ngo√†i kho·∫£ng gi·ªõi h·∫°n
    -   S·ª≠ d·ª•ng c√¢u l·ªánh **xlim()** & **ylim()**

-   C√°ch 2:

    -   "zoom in" v√†o kho·∫£ng gi·ªõi h·∫°n ü°∫ kh√¥ng lo·∫°i b·ªè c√°c gi√° tr·ªã n·∫±m ngo√†i gi·ªõi h·∫°n
    -   S·ª≠ d·ª•ng c√¢u l·ªánh **coord_cartesian()**

## 

```{r}
p <- ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point() +
    geom_smooth(method = "lm")
```

::: {layout-ncol="2"}
```{r}
p1 <- p + 
    xlim(c(0, 0.1)) + 
    ylim(c(0, 1000000))

p1
```

```{r}
p2 <- p + 
    coord_cartesian(xlim=
    c(0,0.1), 
    ylim=c(0, 1000000))
p2
```
:::

::: {layout-ncol="2"}
```         
Thay ƒë·ªïi xu h∆∞·ªõng do lo·∫°i b·ªè c√°c gi√° tr·ªã ngo√†i ph·∫°m vi 0 - 1000000
```

```         
Gi·ªØ nguy√™n xu h∆∞·ªõng do ch·ªâ ‚Äúzoom in‚Äù v√†o ph·∫°m vi 0 - 1000000
```
:::

## 4. Thay ƒë·ªïi title v√† axis labels

-   C√≥ nhi·ªÅu c√°ch

-   C√°ch 1: d√πng t·∫•t c·∫£ trong 1 c√¢u l·ªánh

    **labs**(title = "", subtitle="...", y="...", x="...", caption="...")

-   C√°ch 2: t·ª´ng th√†nh ph·∫ßn ri√™ng l·∫ª

    **ggtitle**("...", subtitle= "...") + **xlab**("...") + **ylab**("...")

-   C√°ch 3 : k·∫øt h·ª£p m·ªôt s·ªë "scale" (√≠t d√πng h∆°n)

## 

```{r}
p2 + labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")
```

## full syntax

Syntax c∆° b·∫£n cho scatter plot

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point() +
    geom_smooth(method = "lm") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")
```

## T√πy ch·ªânh color, shape, size, theme

## N·ªôi dung

-   T√πy ch·ªânh color, shape, size
-   Theme

## Color

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(col = "orange") +    #Ch·ªâ √°p d·ª•ng cho layer n√†y, 
                                    #t·∫•t c·∫£ c√°c point th√†nh m√†u ‚Äúorange‚Äù
    geom_smooth(method = "lm") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")
```

## Color

```{r}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(col = "orange") +    #Ch·ªâ √°p d·ª•ng cho layer n√†y, 
                                    #t·∫•t c·∫£ c√°c point th√†nh m√†u ‚Äúorange‚Äù
    geom_smooth(method = "lm") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")
```

## Color

-   C√≥ th·ªÉ g·ªçi t√™n tr·ª±c ti·∫øp: "red", "blue"... [www.stat.columbia.edu/\~tzheng/files/Rcolor.pdf](www.stat.columbia.edu/~tzheng/files/Rcolor.pdf){preview-link="false" style="text-align: center" target="_blank"}
-   H·ªá th·ªëng m√†u Hexadecimal code (search t·ª´ kh√≥a "hex color" b·∫±ng google)
-   H·ªá th·ªëng RGB

![](images4/slide31.png){fig-align="center"}

## Color

-   M·ªôt s·ªë package cung c·∫•p ph·ªï m√†u ri√™ng
-   "viridis" cung c·∫•p 4 ph·ªï m√†u li√™n t·ª•c
-   "RColorBrewer" cung c·∫•p c√°c ph·ªï m√†u li√™n t·ª•c v√† r·ªùi r·∫°c

## Color

[http://colorbrewer2.org/#type=sequential&scheme=RdPu&n=9](http://colorbrewer2.org/#type=sequential&scheme=RdPu&n=9){preview-link="false" style="text-align: center" target="_blank"}

![](images4/slide33.png){fig-align="center"}

## Package viridis

![](images4/slide34.jpg){fig-align="center"}

## Package RColorBrewer

![](images4/slide35.png){fig-align="center"}

## Color

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +     # M√†u kh√°c nhau cho t·ª´ng ‚Äústate‚Äù
    geom_smooth(method = "lm") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")

```

## Color

```{r}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +     # M√†u kh√°c nhau cho t·ª´ng ‚Äústate‚Äù
    geom_smooth(method = "lm") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")
```

## Color

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +
    geom_smooth(method = "lm",      # Th√™m m√†u cho ƒë∆∞·ªùng smooth
                color = "red", 
                fill = "orange") + 
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")

```

## Color

```{r}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +
    geom_smooth(method = "lm",      # Th√™m m√†u cho ƒë∆∞·ªùng smooth
                color = "red", 
                fill = "orange") + 
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics")

```

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
     scale_colour_brewer(palette = "Set1")
```

## 

```{r}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state)) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
     scale_colour_brewer(palette = "Set1")
```

## Size & shape

![](images4/slide39.png){fig-align="center"}

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state, fill = state), size = 3, shape = 21, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
     scale_colour_brewer(palette = "Set1")

```

```         
shape = 21
```

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state, fill = state), size = 3, shape = 23, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
     scale_colour_brewer(palette = "Set1")

```

```         
shape = 23
```

## 

![](images4/slide43.png){fig-align="center"}

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state, fill = state), size = 3, shape = 21, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

```         
Theme_bw()
```

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(col = state, fill = state), size = 3, shape = 21, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_linedraw(15)
```

```         
theme_linedraw()
```

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state, fill = state), shape = 21, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

## 

```{r, fig.align="center"}
ggplot(data = midwest, aes(x = area, y = poptotal, size = popdensity, col = state, fill = state)) + 
    geom_point(shape = 21, alpha = 0.4) +
    scale_size(range = c(1,30))+ 
    geom_smooth(aes(group = 1), se = F, color = "red", fill = "orange") +
    guides(size = F) +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

## 

```{r, fig.align="center"}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state, fill = state), shape = 21, alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

## 

```{r, fig.align="center"}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal, size = popdensity, col = state, fill = state)) + 
    geom_point(shape = 21, alpha = 0.4) +
    scale_size(range = c(1,30))+ 
    geom_smooth(aes(group = 1), se = F, color = "red", fill = "orange") +
    guides(size = F) +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

## Legend, text, labels & Annotation

## 

![](images4/slide52.png){fig-align="center"}

## Thay ƒë·ªïi Legend

-   Thay ƒë·ªïi title cho legend
-   Thay ƒë·ªïi labels & color cho legend ·ª©ng v·ªõi categories
-   Remove hay thay ƒë·ªïi legend positions

## Thay ƒë·ªïi title cho legend

-   C√ì 3 c√°ch

-   S·ª≠ d·ª•ng labs()

```         
labs(color ="State", fill ="State", size = "Density")
```

-   S·ª≠ d·ª•ng guides()

```         
guides(color = guide_legend("State"), fill = guide_legend("State"), size = guide_legend("Density"))
```

## Thay ƒë·ªïi title cho legend

-   C√ì 3 c√°ch

-   S·ª≠ d·ª•ng scale\_\[...\]

T√πy v√†o vi·ªác s·ª≠ d·ª•ng lo·∫°i "scale\_", cho ph√©p thay ƒë·ªïi legend cho m√†u "scale" t∆∞∆°ng ·ª©ng (v√≠ d·ª• trong tr∆∞·ªùng h·ª£p n√†y)

```         
scale_color_discrete(name="State") + 
scale_fill_discrete(name="State") + 
scale_size_continuous(name = "Density", guide = FALSE)
```

## 

```{r, fig.align="center"}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal, size = popdensity, col = state, fill = state)) + 
    geom_point(shape = 21, alpha = 0.4) +
    scale_size(range = c(1,30))+ 
    geom_smooth(aes(group = 1), se = F, color = "red", fill = "orange") +
    guides(size = F) +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    theme_bw(15)
```

## Thay ƒë·ªïi labels & color cho legend

-   C√≥ th·ªÉ s·ª≠ d·ª•ng ch·ª©c nƒÉng scale\_\[color/fill\]\_manual()

```{r}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)
```

## 

```{r}
#| echo: false
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)
```

## Remove hay thay ƒë·ªïi legend positions

-   S·ª≠ d·ª•ng theme(legend.position = "...")
-   "left", "right", "top", "bottom"

```         
theme(legend.position = "top")
```

```         
theme(legend.position = c(0.85,0.5))
```

## 

```{r, echo=TRUE, results="hide", fig.show="hide"}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    scale_size_continuous(name = "Density", guide = F)+
    guides(color = guide_legend(override.aes = list(size=2, stroke = 2))) +
    theme(legend.position = c(0.85, 0.6))+
    theme_bw(15)
```

## 

```{r , echo = FALSE}
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    scale_size_continuous(name = "Density", guide = F)+
    guides(color = guide_legend(override.aes = list(size=2, stroke = 2))) +
    theme(legend.position = c(0.85, 0.6))+
    theme_bw(15)
```

## Text & labels

-   M·ª•c ti√™u: hi·ªán t√™n "country" c·ªßa c√°c n∆∞·ªõc c√≥ d√¢n s·ªë \>500,000

    -   B1: L·ªçc nh·ªØng n∆∞·ªõc c√≥ poptotal \> 500,000 (ƒë·∫∑t t√™n l√† large_country)

    ```         
    large_country <- midwest %>% filter(poptotal > 500000)
    ```

    -   B2: s·ª≠ d·ª•ng geom_text()

## 

```{r, echo=TRUE, results="hide", fig.show="hide"}
large_country <- midwest %>% filter(poptotal > 500000)

ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
         subtitle="From midwest dataset", 
         y="Population", x="Area", 
         caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)+
    geom_text(data = large_country, aes(label = county), size = 2) 

```

## 

```{r, echo=FALSE}
large_country <- midwest %>% filter(poptotal > 500000)

ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
         subtitle="From midwest dataset", 
         y="Population", x="Area", 
         caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)+
    geom_text(data = large_country, aes(label = county), size = 2) 

```

Text tr√πng v·ªõi point =\> ch·ªânh v·ªã tr√≠ text b·∫±ng package "ggrepel" =\> thay geom_text() = geom_text_repel()

## 

```{r, echo=TRUE, results="hide", fig.show="hide"}
large_country <- midwest %>% filter(poptotal > 500000)
library(ggrepel)
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
         subtitle="From midwest dataset", 
         y="Population", x="Area", 
         caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)+
    geom_text_repel(data = large_country, aes(label = county), size = 2) 
```

## 

```{r, echo=FALSE}
large_country <- midwest %>% filter(poptotal > 500000)
library(ggrepel)
ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
         subtitle="From midwest dataset", 
         y="Population", x="Area", 
         caption="Midwest Demographics") +
    scale_colour_brewer(palette = "Set1") +
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15)+
    geom_text_repel(data = large_country, aes(label = county), size = 2) 
```

## 

```{r, echo=TRUE, results="hide", fig.show="hide"}
large_country <- midwest %>% filter(poptotal > 500000)
library(ggrepel)

p <- ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    guides(color = guide_legend(override.aes = list(size=2, stroke = 2))) + 
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15) + 
    geom_text_repel(data = large_country, aes(label = county), size = 2) 
p

```

## 

```{r, echo=FALSE}
large_country <- midwest %>% filter(poptotal > 500000)
library(ggrepel)

p <- ggplot(data = midwest, aes(x = area, y = poptotal)) + 
    geom_point(aes(size = popdensity, col = state), alpha = 0.5) +
    geom_smooth(method = "lm", color = "red", fill = "orange") +
    coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) + 
    labs(title="Area Vs Population", 
          subtitle="From midwest dataset", 
          y="Population", x="Area", 
          caption="Midwest Demographics") +
    scale_color_manual(name = "State", 
                       labels = c("Illinois", 
                                  "Indiana", 
                                  "Michigan", 
                                  "Ohio", 
                                  "Wisconsin"), 
                       values = c("IL"="blue", 
                                  "IN"="red", 
                                  "MI"="green", 
                                  "OH"="purple", 
                                  "WI"="orange")) +
    guides(color = guide_legend(override.aes = list(size=2, stroke = 2))) + 
    scale_size_continuous(name = "Density", guide = F)+
    theme_bw(15) + 
    geom_text_repel(data = large_country, aes(label = county), size = 2) 
p
```

## Advanced theme & font

## 

-   ?theme()
-   element_blank(): draws nothing, and assigns no space.
-   element_rect(): borders and backgrounds.
-   element_line(): lines.
-   element_text(): text.
-   C√†i ƒë·∫∑t th√™m font

```         
install.packages("extrafont")
library(extrafont)
font_import()
loadfonts(device = "win")
```

## 

```{r, echo=TRUE, results="hide", fig.show="hide"}
p <- p + theme(
        # Ch·ªçn font ch·ªØ 
        text = element_text(family = "Georgia"),
        # T√πy ch·ªânh text cho title (c·ª° ch≈© 18, bold)
        plot.title = element_text(size = 18,color = "grey10",  face = "bold"),
        # T√πy ch·ªânh cho subtitle
        plot.subtitle = element_text(color = "gray40", size = 12),
        # T√πy ch·ªânh cation
        plot.caption = element_text(face = "italic", size = 12, color = "red"),
        # T√πy ch·ªânh title cho tr·ª•c x
        axis.title.x = element_text(face = "bold", size = 11, color = "grey20"),
        # T√πy chinh title cho tr·ª•c y
        axis.title.y = element_text(face = "bold", size = 11, color = "grey20"),
        # T√πy ch·ªânh background, grid
        panel.grid.major = element_line(color = "#4d5566"),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.background = element_rect(fill = "#444B5A"),
        # T√πy ch·ªânh hi·ªán th·ªã ƒë∆°n v·ªã tr·ª•c x, y
        axis.text.x = element_text(size = 13, color = "grey10"),
        axis.text.y = element_text(size = 13, color = "grey10"),
        # T√πy ch·ªânh tick cho 2 tr·ª•c
        axis.ticks = element_line(size = 13)
    ) 
p
```

## 

```{r, echo=FALSE}
p <- p + theme(
        # Ch·ªçn font ch·ªØ 
        text = element_text(family = "Georgia"),
        # T√πy ch·ªânh text cho title (c·ª° ch≈© 18, bold)
        plot.title = element_text(size = 18,color = "grey10",  face = "bold"),
        # T√πy ch·ªânh cho subtitle
        plot.subtitle = element_text(color = "gray40", size = 12),
        # T√πy ch·ªânh cation
        plot.caption = element_text(face = "italic", size = 12, color = "red"),
        # T√πy ch·ªânh title cho tr·ª•c x
        axis.title.x = element_text(face = "bold", size = 11, color = "grey20"),
        # T√πy chinh title cho tr·ª•c y
        axis.title.y = element_text(face = "bold", size = 11, color = "grey20"),
        # T√πy ch·ªânh background, grid
        panel.grid.major = element_line(color = "#4d5566"),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.background = element_rect(fill = "#444B5A"),
        # T√πy ch·ªânh hi·ªán th·ªã ƒë∆°n v·ªã tr·ª•c x, y
        axis.text.x = element_text(size = 13, color = "grey10"),
        axis.text.y = element_text(size = 13, color = "grey10"),
        # T√πy ch·ªânh tick cho 2 tr·ª•c
        axis.ticks = element_line(size = 13)
    ) 
p
```

## Facet

## Facet

-   Ph√¢n chia theo 2 nh√≥m khu v·ª±c "inmetro": Yes/No

```         
p + facet_wrap(~inmetro, ncol = 2)
```

##
```{r}
p + facet_wrap(~inmetro, ncol = 2)
```

## 

![](images4/slide75.png){fig-align="center"}

## T√¨m hi·ªÉu th√™m

-   coordinate
-   Gh√©p c√°c ·∫£nh ri√™ng l·∫ª v√†o 1 qua package "gridExtra"

## Th·ª±c h√†nh


## 

::: {layout-ncol=3}

![](images4/772.png)

![](images4/77.png)

![](images4/773.png)
:::

## 

![](images4/image7.png){fig-align="center"}


